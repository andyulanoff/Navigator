{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","identifier":{"url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Destinations","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations"],"anchor":"Related-Documentation","title":"Related Documentation"},{"title":"The Basics","generated":true,"anchor":"The-Basics","identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationTree","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Checkpoints","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Dismissible"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"NavigationDestination types can be used in order to push and present views as needed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This can happen using…","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Standard SwiftUI modifiers like NBNavigationLink(value:label:).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Imperatively by asking a Navigator to perform the desired action.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Or via a deep link action enabled by a NavigationURLHander.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"They’re one of the core elements that make Navigator possible, and they give us the separation of concerns we mentioned earlier."}],"type":"paragraph"},{"level":3,"anchor":"Defining-Navigation-Destinations","type":"heading","text":"Defining Navigation Destinations"},{"type":"paragraph","inlineContent":[{"text":"Destinations (or routes) are typically just public lists of enumerated values, one for each view desired.","type":"text"}]},{"code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI requires navigation destination values to be "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", and so do we. That conformance, however, is satisfied by"},{"text":" ","type":"text"},{"text":"conforming to the protocol NavigationDestination as shown next.","type":"text"}]},{"type":"heading","anchor":"Defining-Destination-Views","level":3,"text":"Defining Destination Views"},{"type":"paragraph","inlineContent":[{"text":"Defining our destination views is easy, since NavigationDestination actually conforms to the View protocol!","type":"text"}]},{"inlineContent":[{"text":"As such, we just extend our destination with a view body that returns the correct view for each case.","type":"text"}],"type":"paragraph"},{"code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This is a powerful technique that lets Navigator easily create our views whenever or wherever needed. That could be via ","type":"text"},{"code":"NBNavigationLink(value:label)","type":"codeVoice"},{"text":", or presented via a sheet or fullscreen cover.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"*To build more complex views that have external dependencies or that require access to environmental values, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Registering Navigation Destinations","anchor":"Registering-Navigation-Destinations","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Like traditional ","type":"text"},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" destination types, "},{"code":"NavigationDestination","type":"codeVoice"},{"text":" types need to be registered with the enclosing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"navigation stack in order for "},{"type":"codeVoice","code":"navigate(to:)"},{"type":"text","text":" presentations and standard "},{"code":"NBNavigationLink(value:label:)","type":"codeVoice"},{"text":" transitions","type":"text"},{"text":" ","type":"text"},{"text":"to work correctly.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But since each "},{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":" already defines the views to be provided, registering destination types can be done"},{"type":"text","text":" "},{"type":"text","text":"using a simple one-line view modifier."}]},{"syntax":"swift","code":["ManagedNavigationStack {","    HomeView()","        .nbNavigationDestination(HomeDestinations.self)","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Note that registering types more than once in the same NBNavigationStackisn’t recommended and Navigator will in fact warn you if it see multiple registrations of the same type."}]}]},{"text":"Using Navigation Destinations","anchor":"Using-Navigation-Destinations","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"With that out of the way, Navigation Destinations can be dispatched using a standard SwiftUI "},{"type":"codeVoice","code":"NBNavigationLink(value:label:)"},{"type":"text","text":" view."}],"type":"paragraph"},{"type":"codeListing","code":["NBNavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or they can be dispatched declaratively using modifiers."}],"type":"paragraph"},{"code":["\/\/ Sample using optional destination","@State var page: SettingsDestinations?","...","Button(\"Modifier Navigate to Page 3!\") {","    page = .page3","}",".navigate(to: $page)","","\/\/ Sample using trigger value","@State var triggerPage3: Bool = false","...","Button(\"Modifier Trigger Page 3!\") {","    triggerPage3.toggle()","}",".navigate(trigger: $triggerPage3, destination: SettingsDestinations.page3)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or imperatively by asking a Navigator to perform the desired action."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Environment(\\.navigator) var navigator: Navigator","...","Button(\"Button Push Home Page 55\") {","    navigator.push(HomeDestinations.pageN(55))","}","Button(\"Button Navigate To Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case you’re wondering, calling "},{"type":"codeVoice","code":"push"},{"type":"text","text":" pushes the associate view onto the current "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":", while "},{"type":"codeVoice","code":"Navigate(to:)"},{"type":"text","text":" will push"},{"type":"text","text":" "},{"type":"text","text":"the view or present the view, based on the "},{"code":"NavigationMethod","type":"codeVoice"},{"type":"text","text":" specified."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Speaking of which…"}]},{"level":3,"text":"Navigation Methods","type":"heading","anchor":"Navigation-Methods"},{"type":"paragraph","inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"type":"text","text":" can be extended to provide a distinct "},{"isActive":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","type":"reference"},{"type":"text","text":" for each enumerated type."}]},{"type":"codeListing","syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, should "},{"type":"codeVoice","code":"navigator.navigate(to: HomeDestinations.page3)"},{"text":" be called, Navigator will automatically present that view in a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}]},{"inlineContent":[{"text":"The current navigation methods are: .push (default), .sheet, .cover, and .send.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Predefined methods can be overridden using Navigator’s "},{"type":"codeVoice","code":"navigate(to:method:)"},{"type":"text","text":" function."}],"type":"paragraph"},{"syntax":"swift","code":["Button(\"Present Home Page 55 Via Sheet\") {","    navigator.navigate(to: HomeDestinations.pageN(55), method: .sheet)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that NavigationDestinations dispatched via NBNavigationLink will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" push onto the NavigationStack. That’s just how SwiftUI works.","type":"text"}]},{"type":"heading","text":"Values, Not Destinations","anchor":"Values-Not-Destinations","level":2},{"inlineContent":[{"type":"text","text":"Navigator is designed to work with "},{"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","isActive":true},{"text":" types and SwiftUI’s ","type":"text"},{"type":"codeVoice","code":"NBNavigationLink(value:label:)"},{"text":"; not ","type":"text"},{"code":"NBNavigationLink(destination:label:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Mixing the two on the same "},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":" can lead to unexpected behavior, and using "},{"code":"NBNavigationLink(destination:label:)","type":"codeVoice"},{"type":"text","text":" at all can affect programatic navigation using Navigators."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ DO","NBNavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}","","\/\/ DON'T DO","NBNavigationLink(destination: HomePage3View()) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you start seeing odd behavior returning to previous views, check to make sure a "},{"type":"codeVoice","code":"NBNavigationLink(destination:label:)"},{"text":" link hasn’t worked its way into your code.","type":"text"}]},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use NavigationDestination values. Avoid using "},{"code":"NBNavigationLink(destination:label:)","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"important","type":"aside"}]}],"abstract":[{"type":"text","text":"All navigation in Navigator is accomplished using enumerated values that conform to the NavigationDestination protocol."}],"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigatorui\/destinations"]}],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"NavigatorUI"}],"title":"Destinations"},"references":{"doc://NavigatorUI/documentation/NavigatorUI/AdvancedDestinations":{"title":"Advanced Destinations","type":"topic","kind":"article","abstract":[{"type":"text","text":"Building NavigationDestinations that access the environment and other use cases"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/AdvancedDestinations","url":"\/documentation\/navigatorui\/advanceddestinations","role":"article"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","title":"NavigationDestination","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationDestination"}],"url":"\/documentation\/navigatorui\/navigationdestination","kind":"symbol","navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}]},"doc://NavigatorUI/documentation/NavigatorUI":{"type":"topic","kind":"symbol","url":"\/documentation\/navigatorui","title":"NavigatorUI","role":"collection","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}]},"doc://NavigatorUI/documentation/NavigatorUI/Dismissible":{"abstract":[{"type":"text","text":"Understanding dismissible views and their role in application navigation and deep linking."}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Dismissible","url":"\/documentation\/navigatorui\/dismissible","type":"topic","kind":"article","role":"article","title":"Dismissible Views"},"doc://NavigatorUI/documentation/NavigatorUI/Checkpoints":{"abstract":[{"text":"Navigation Checkpoints allow one to return to a specific waypoint in the navigation tree.","type":"text"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Checkpoints","title":"Checkpoints","type":"topic","url":"\/documentation\/navigatorui\/checkpoints","kind":"article","role":"article"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationMethod":{"url":"\/documentation\/navigatorui\/navigationmethod","abstract":[{"type":"text","text":"Defines the desired presentation mechanism for a given "},{"code":"NavigationDestination","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationMethod"}],"title":"NavigationMethod","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationTree":{"abstract":[{"type":"text","text":"To get the most out of Navigator you need to understand the navigation tree where its Navigators live."}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationTree","url":"\/documentation\/navigatorui\/navigationtree","type":"topic","kind":"article","role":"article","title":"Understanding The Navigation Tree"}}}
