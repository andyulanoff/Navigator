{"sections":[],"abstract":[{"type":"text","text":"Provides enumerated navigation types than can be translated into Views."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/NavigatorUI\/SQ","doc:\/\/NavigatorUI\/SH","doc:\/\/NavigatorUI\/s12IdentifiableP","doc:\/\/NavigatorUI\/7SwiftUI4ViewP"],"title":"Inherits From","type":"inheritsFrom"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"NavigationDestination","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"text":"Identifiable","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"NavigationDestination types can be used in order to push and present views as needed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This can happen using…","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Standard SwiftUI modifiers like "},{"type":"codeVoice","code":"NBNavigationLink(value:label:)"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Imperatively by asking a "},{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator","type":"reference","isActive":true},{"type":"text","text":" to perform the desired action."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Or via a deep link action enabled by a "},{"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationURLHandler","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"They’re one of the core elements that make Navigator possible.","type":"text"}]},{"text":"Defining Navigation Destinations","type":"heading","level":3,"anchor":"Defining-Navigation-Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Destinations are typically just a simple list of enumerated values."}]},{"code":["public enum HomeDestinations {","    case page2","    case page3","    case pageN(Int)","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Along with an extension that provides the correct view for a specific case.","type":"text"}]},{"type":"codeListing","code":["extension HomeDestinations: NavigationDestination {","    public var body: some View {","        switch self {","        case .page2:","            HomePage2View()","        case .page3:","            HomePage3View()","        case .pageN(let value):","            HomePageNView(number: value)","        }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Yes, NavigationDestination’s are Views!"}]},{"inlineContent":[{"type":"text","text":"Note how associated values can be used to pass parameters to views as needed."}],"type":"paragraph"},{"anchor":"Using-Navigation-Destinations","type":"heading","level":3,"text":"Using Navigation Destinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be done via using a standard SwiftUI "},{"type":"codeVoice","code":"NBNavigationLink(value:label:)"},{"type":"text","text":" view."}]},{"type":"codeListing","code":["NBNavigationLink(value: HomeDestinations.page3) {","    Text(\"Link to Home Page 3!\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Or imperatively by asking a Navigator to perform the desired action.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["Button(\"Button Navigate to Home Page 55\") {","    navigator.navigate(to: HomeDestinations.pageN(55))","}"]},{"level":3,"type":"heading","text":"Registering Navigation Destinations","anchor":"Registering-Navigation-Destinations"},{"inlineContent":[{"type":"text","text":"Like traditional "},{"type":"codeVoice","code":"NavigationStack"},{"text":" destination types, ","type":"text"},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" types need to be registered with the enclosing"},{"type":"text","text":" "},{"type":"text","text":"navigation stack in order for standard "},{"type":"codeVoice","code":"NBNavigationLink(value:label:)"},{"type":"text","text":" transitions to work correctly."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"But since each "},{"type":"codeVoice","code":"NavigationDestination"},{"type":"text","text":" already defines the view to be provided, registering destination types can be done"},{"text":" ","type":"text"},{"type":"text","text":"using a simple one-line view modifier."}]},{"syntax":"swift","code":["ManagedNavigationStack {","    HomeView()","        .nbNavigationDestination(HomeDestinations.self)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This also makes using the same destination type with more than one navigation stack a lot easier."}]},{"level":3,"anchor":"Navigation-Methods","text":"Navigation Methods","type":"heading"},{"type":"paragraph","inlineContent":[{"code":"NavigationDestination","type":"codeVoice"},{"text":" can also be extended to provide a distinct ","type":"text"},{"type":"reference","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod","isActive":true},{"text":" for each enumerated type.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension HomeDestinations: NavigationDestination {","    public var method: NavigationMethod {","        switch self {","        case .page3:","            .sheet","        default:","            .push","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, should "},{"type":"codeVoice","code":"navigator.navigate(to: HomeDestinations.page3)"},{"type":"text","text":" be called, Navigator will automatically present that view in a"},{"text":" ","type":"text"},{"type":"text","text":"sheet. All other views will be pushed onto the navigation stack."}]},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"text":"When using ","type":"text"},{"code":"NBNavigationLink(value:label:)","type":"codeVoice"},{"type":"text","text":" the method will be ignored and SwiftUI will push"},{"type":"text","text":" "},{"text":"the value onto the navigation stack as it would normally.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/method-8d7ia","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/receiveResumeType-1h1g7"]},{"generated":true,"identifiers":["doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/asAnyView()","doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/callAsFunction()"],"title":"Instance Methods","anchor":"Instance-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/navigatorui\/navigationdestination"]}],"metadata":{"modules":[{"name":"NavigatorUI"}],"title":"NavigationDestination","roleHeading":"Protocol","symbolKind":"protocol","externalID":"s:11NavigatorUI21NavigationDestinationP","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"NavigationDestination","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NavigationDestination"}]},"hierarchy":{"paths":[["doc:\/\/NavigatorUI\/documentation\/NavigatorUI"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination"},"kind":"symbol","references":{"doc://NavigatorUI/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/SQ"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/asAnyView()":{"kind":"symbol","abstract":[{"text":"Convenience function returns AnyView.","type":"text"}],"type":"topic","title":"asAnyView()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asAnyView","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7SwiftUI7AnyViewV","text":"AnyView","kind":"typeIdentifier"}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/asAnyView()","url":"\/documentation\/navigatorui\/navigationdestination\/asanyview()","role":"symbol"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/callAsFunction()":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/callAsFunction()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/navigatorui\/navigationdestination\/callasfunction()","type":"topic","deprecated":true,"abstract":[],"title":"callAsFunction()"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/method-8d7ia":{"kind":"symbol","abstract":[{"text":"Can be overridden to define a specific presentation type for each destination.","type":"text"}],"type":"topic","title":"method","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"method"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11NavigatorUI16NavigationMethodO","text":"NavigationMethod"}],"defaultImplementations":1,"required":true,"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/method-8d7ia","url":"\/documentation\/navigatorui\/navigationdestination\/method-8d7ia","role":"symbol"},"doc://NavigatorUI/7SwiftUI4ViewP":{"type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/7SwiftUI4ViewP","title":"SwiftUICore.View"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination":{"abstract":[{"text":"Provides enumerated navigation types than can be translated into Views.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination","title":"NavigationDestination","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NavigationDestination"}],"url":"\/documentation\/navigatorui\/navigationdestination","kind":"symbol","navigatorTitle":[{"text":"NavigationDestination","kind":"identifier"}]},"doc://NavigatorUI/SH":{"type":"unresolvable","identifier":"doc:\/\/NavigatorUI\/SH","title":"Swift.Hashable"},"doc://NavigatorUI/documentation/NavigatorUI":{"type":"topic","kind":"symbol","url":"\/documentation\/navigatorui","title":"NavigatorUI","role":"collection","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI","abstract":[{"text":"Managed NavigationStacks for SwiftUI.","type":"text"}]},"doc://NavigatorUI/documentation/NavigatorUI/NavigationMethod":{"url":"\/documentation\/navigatorui\/navigationmethod","abstract":[{"type":"text","text":"Defines the desired presentation mechanism for a given "},{"code":"NavigationDestination","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationMethod"}],"title":"NavigationMethod","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NavigationMethod"}],"type":"topic","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationMethod"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationURLHandler":{"title":"NavigationURLHandler","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationURLHandler","kind":"identifier"}],"url":"\/documentation\/navigatorui\/navigationurlhandler","navigatorTitle":[{"text":"NavigationURLHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Provides Deep Linking support."}],"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationURLHandler"},"doc://NavigatorUI/s12IdentifiableP":{"identifier":"doc:\/\/NavigatorUI\/s12IdentifiableP","title":"Swift.Identifiable","type":"unresolvable"},"doc://NavigatorUI/documentation/NavigatorUI/NavigationDestination/receiveResumeType-1h1g7":{"type":"topic","url":"\/documentation\/navigatorui\/navigationdestination\/receiveresumetype-1h1g7","required":true,"role":"symbol","identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/NavigationDestination\/receiveResumeType-1h1g7","kind":"symbol","defaultImplementations":1,"title":"receiveResumeType","abstract":[{"type":"text","text":"Can be overridden to define a specific send resume type for each destination."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"receiveResumeType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NavigationReceiveResumeType","kind":"typeIdentifier","preciseIdentifier":"s:11NavigatorUI27NavigationReceiveResumeTypeO"}]},"doc://NavigatorUI/documentation/NavigatorUI/Navigator":{"identifier":"doc:\/\/NavigatorUI\/documentation\/NavigatorUI\/Navigator","title":"Navigator","type":"topic","role":"symbol","abstract":[{"text":"Every ManagedNavigationStack has a Navigator to manage it.","type":"text"}],"kind":"symbol","url":"\/documentation\/navigatorui\/navigator","navigatorTitle":[{"text":"Navigator","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Navigator","kind":"identifier"}]}}}
